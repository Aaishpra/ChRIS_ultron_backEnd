# https://docs.docker.com/compose/yml/
# Each service defined in docker-compose.yml must specify exactly one of
# image or build. Other keys are optional, and are analogous to their
# docker run command-line counterparts.
#
# As with docker run, options specified in the Dockerfile (e.g., CMD,
# EXPOSE, VOLUME, ENV) are respected by default - you don't need to
# specify them again in docker-compose.yml.
#

chris_dev:
  image:  fnndsc/chris_dev_backend:dockerized_plugins
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - ./chris_backend:/usr/src/chris_backend
  volumes_from:
    - dicom_listener
    - chris_dev_files
  ports:
    - "8000:8000"
  links:
    - chris_dev_db:mysql
  labels:
    name: "ChRIS_ultron_backEnd"
    role: "Backend development server"


chris_dev_files:
  image:  alpine
  command: echo Files container
  volumes:
    - /usr/users
  labels:
    name: "ChRIS_ultron_backEnd feed files"
    role: "Backend development feed files"


chris_dev_db:
  image:  mysql:5
  volumes_from:
    - chris_dev_db_data
  environment:
    - MYSQL_ROOT_PASSWORD=rootp
    - MYSQL_DATABASE=chris_dev
    - MYSQL_USER=chris
    - MYSQL_PASSWORD=Chris1234
  labels:
    name: "ChRIS_ultron_backEnd MySQL Database"
    role: "Backend development database"


chris_dev_db_data:
  image:  alpine
  command: echo Data container
  volumes:
    - /var/lib/mysql
  labels:
    name: "ChRIS_ultron_backEnd database data"
    role: "Backend development database data"


dicom_listener:
  image:  fnndsc/dck-dicom-listener
  volumes:
    - /incoming
  ports:
    - "10403:10402"
  labels:
    name: "dicom_listener"
    role: "Dicom listener"

pfcon_service:
  image:  fnndsc/pfcon
  ports:
    - "5005:5005"
  labels:
    name: "pfcon"
    role: "pfcon service"

pman_service:
  image:  fnndsc/pman
  ports:
    - "5010:5010"
  labels:
    name: "pman"
    role: "pman service"

pfioh_service:
  image:  fnndsc/pfioh
  volumes:
    - /home/tmp/remote
  ports:
    - "5055:5055"
  labels:
    name: "pfioh"
    role: "pfioh service"

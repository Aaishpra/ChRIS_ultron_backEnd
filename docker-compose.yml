# https://docs.docker.com/compose/yml/
# Each service defined in docker-compose.yml must specify exactly one of
# image or build. Other keys are optional, and are analogous to their
# docker run command-line counterparts.
#
# As with docker run, options specified in the Dockerfile (e.g., CMD,
# EXPOSE, VOLUME, ENV) are respected by default - you don't need to
# specify them again in docker-compose.yml.
#

version: '3.7'

services:

  chris:
    image: fnndsc/chris:1.1.0
    env_file:
      - ./secrets/.chris.env
      - ./secrets/.chris_db.env
      - ./secrets/.swift_service.env
    ports:
      - "8000:8000"
    depends_on:
      - chris_db
      - swift_service
      - queue
      - chris_store
      - pfcon_service
    restart: on-failure
    networks:
      - local
    labels:
      name: "ChRIS_ultron_backEnd"
      role: "Production server using Apache's mod_wsgi"

  worker:
    image: fnndsc/chris:1.1.0
    entrypoint: ''
    command: celery -A core worker -c 4 -l info -Q main
    env_file:
      - ./secrets/.chris.env
      - ./secrets/.chris_db.env
      - ./secrets/.swift_service.env
    depends_on:
      - chris_db
      - swift_service
      - queue
      - pfcon_service
    restart: on-failure
    networks:
      - local
    labels:
      name: "ChRIS_ultron_backEnd Asynchronous Worker"
      role: "Production async worker"

  scheduler:
    image: fnndsc/chris:1.1.0
    entrypoint: ''
    command: celery -A core beat -l info --pidfile /home/localuser/celerybeat.pid --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./secrets/.chris.env
      - ./secrets/.chris_db.env
      - ./secrets/.swift_service.env
    depends_on:
      - chris_db
      - swift_service
      - queue
    restart: on-failure
    networks:
      - local
    labels:
      name: "ChRIS_ultron_backEnd Periodic Tasks Scheduler"
      role: "Production periodic tasks scheduler"

  chris_db:
    image: mysql:5
    volumes:
      - chris_db_data:/var/lib/mysql
    env_file:
      - ./secrets/.chris_db.env
    restart: on-failure
    networks:
      - local
    labels:
      name: "ChRIS_ultron_backEnd MySQL Database"
      role: "Production MySQL database"

  queue:
    image: rabbitmq:3
    restart: on-failure
    networks:
      - local
    labels:
      name: "ChRIS_ultron_backEnd Asynchronous Task Queue"
      role: "Production async task queue"

  chris_store:
    image: fnndsc/chris_store:latest
    env_file:
      - ./secrets/.chris_store.env
      - ./secrets/.chris_store_db.env
      - ./secrets/.swift_service.env
    ports:
      - "8010:8010"
    depends_on:
      - chris_store_db
      - swift_service
    restart: on-failure
    networks:
      local:
        aliases:
          - chris-store.local
    labels:
      name: "ChRIS_store"
      role: "Chris store service"

  chris_store_db:
    image: mysql:5
    volumes:
      - chris_store_db_data:/var/lib/mysql
    env_file:
      - ./secrets/.chris_store_db.env
    restart: on-failure
    networks:
      - local
    labels:
      name: "ChRIS_store MySQL Database"
      role: "Chris store database"

  swift_service:
    image: fnndsc/docker-swift-onlyone:latest
    init: true
    volumes:
      - swift_storage:/srv
    env_file:
      - ./secrets/.swift_service.env
    restart: on-failure
    networks:
      - local
    labels:
      name: "swift"
      role: "swift object storage service"

  pfcon_service:
    image: fnndsc/pfcon:2.4.0
    command: ["--forever", "--httpResponse", "--verbosity", "1"]
    env_file:
      - ./secrets/.swift_service.env
    depends_on:
      - swift_service
      - pman_service
      - pfioh_service
    restart: on-failure
    networks:
      local:
        aliases:
          - pfcon.local
    labels:
      name: "pfcon"
      role: "pfcon service"

  pfioh_service:
    image: fnndsc/pfioh:3.0.2
    command: ["--forever", "--httpResponse", "--createDirsAsNeeded", "--storeBase", "/hostFS/storeBase", "--verbosity", "0"]
    volumes:
      - chris-pfioh-remote:/hostFS/storeBase
    restart: on-failure
    networks:
      - local
    labels:
      name: "pfioh"
      role: "pfioh service"

  pman_service:
    image: fnndsc/pman:2.2.2
    environment:
      - PMAN_DOCKER_VOLUME=chris-pfioh-remote
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - chris-pfioh-remote:/hostFS/storeBase
    restart: on-failure
    networks:
      - local
    labels:
      name: "pman"
      role: "pman service"

networks:
  local:

volumes:
  chris_db_data:
  chris_store_db_data:
  swift_storage:
  chris-pfioh-remote:
    name: chris-pfioh-remote
